---
- name: Set Hostname and Add hosts
  hosts: all
  become: yes
  become_user: root
  tasks:
    - name: Add entries to /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ inventory_hostname }} {{ hostvars[inventory_hostname]['ansible_host'] | default(inventory_hostname) }}"
        
    - name: Set the hostname
      hostname:
        name: "{{ inventory_hostname }}"

- name: Install Docker
  hosts: all
  become: yes
  become_user: root

  tasks:
    - name: Install aptitude (for Ubuntu)
      apt:
        name: aptitude
        state: latest
        update_cache: true
      when: ansible_os_family == 'Debian'

    - name: Install yum-utils (for CentOS)
      yum:
        name: yum-utils
        state: latest
        update_cache: true
      when: ansible_os_family == 'RedHat'

    - name: Install required system packages
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key (for Ubuntu)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker Repository (for Ubuntu)
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker Repository (for CentOS)
      yum_repository:
        name: docker-ce
        baseurl: https://download.docker.com/linux/centos/docker-ce.repo
        enabled: yes
      when: ansible_os_family == 'RedHat'

    - name: Update package manager cache (for Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker (for Ubuntu)
      apt:
        name: docker-ce
        state: latest
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker (for CentOS)
      yum:
        name: docker-ce
        state: latest
        update_cache: yes
      when: ansible_os_family == 'RedHat'

    - name: Install Docker Module for Python
      pip:
        name: docker

- name: Run Portainer Container
  hosts: master
  become: yes
  become_user: root

  tasks:
    - name: Confirm before Install Portainer Container
      pause:
        prompt: "Do you want to Install Portainer Container (Master Nodes)? (yes/no)"
      register: confirm_install_portainer
  
    - name: Pull Portainer Docker image
      community.docker.docker_image:
        name: portainer/portainer-ce:latest
        source: pull
      when: (ansible_os_family == 'Debian' or ansible_os_family == 'RedHat') and confirm_install_portainer.user_input == 'yes'

    - name: Run Portainer Container
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        ports:
          - "8000:8000"
          - "9443:9443"
        restart_policy: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
        state: started
      when: (ansible_os_family == 'Debian' or ansible_os_family == 'RedHat') and confirm_install_portainer.user_input == 'yes'

- name: Setting Firewall
  hosts: all
  become: yes
  become_user: root

  tasks:
    - name: Confirm before change Setting Firewall
      pause:
        prompt: "Do you want to change Setting Firewall ? (yes/no)"
      register: confirm_setting_firewall

    - name: Install UFW (Ubuntu)
      apt:
        name: ufw
      when: ansible_distribution == 'Ubuntu' and confirm_setting_firewall.user_input == 'yes'

    - name: Install firewalld (CentOS)
      yum:
        name: firewalld
      when: ansible_distribution == 'CentOS' and confirm_setting_firewall.user_input == 'yes'

    - name: Start and enable UFW or firewalld service
      systemd:
        name: "{{ 'ufw' if ansible_distribution == 'Ubuntu' else 'firewalld' }}"
        state: started
        enabled: yes
      when: confirm_setting_firewall.user_input == 'yes'

    - name: Allow SSH (Port 22) through UFW or firewalld (CentOS)
      firewalld:
        service: ssh
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_distribution == 'CentOS' and confirm_setting_firewall.user_input == 'yes'

    - name: Allow SSH (Port 22) through UFW (Ubuntu)
      ufw:
        rule: allow
        port: '22'
        proto: tcp
      when: ansible_distribution == 'Ubuntu' and confirm_setting_firewall.user_input == 'yes'

    - name: Enable UFW (Ubuntu)
      ufw:
        state: enabled
      when: ansible_distribution == 'Ubuntu' and confirm_setting_firewall.user_input == 'yes'
      
- name: Update Hostname & add Hosts
  hosts: all
  become: yes
  become_user: root
