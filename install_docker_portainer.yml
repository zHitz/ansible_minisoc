---
- name: Install Docker
  hosts: all
  become: yes
  become_user: root

  tasks:
    - name: Set the hostname
        hostname:
        name: "{{ inventory_hostname }}"
        
    - name: Install aptitude (for Ubuntu)
      apt:
        name: aptitude
        state: latest
        update_cache: true
      when: ansible_os_family == 'Debian'

    - name: Install yum-utils (for CentOS)
      yum:
        name: yum-utils
        state: latest
        update_cache: true
      when: ansible_os_family == 'RedHat'

    - name: Install required system packages
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key (for Ubuntu)
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker Repository (for Ubuntu)
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when: ansible_os_family == 'Debian'

    - name: Add Docker Repository (for CentOS)
      yum_repository:
        name: docker-ce
        baseurl: https://download.docker.com/linux/centos/docker-ce.repo
        enabled: yes
      when: ansible_os_family == 'RedHat'

    - name: Update package manager cache (for Ubuntu)
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker (for Ubuntu)
      apt:
        name: docker-ce
        state: latest
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install Docker (for CentOS)
      yum:
        name: docker-ce
        state: latest
        update_cache: yes
      when: ansible_os_family == 'RedHat'

    - name: Install Docker Module for Python
      pip:
        name: docker

- name: Run Portainer Container
  hosts: master
  become: yes
  become_user: root

  tasks:

    - name: Pull Portainer Docker image
      community.docker.docker_image:
        name: portainer/portainer-ce:latest
        source: pull
      when: "ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'"

    - name: Run Portainer Container
      community.docker.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        ports:
          - "8000:8000"
          - "9443:9443"
        restart_policy: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data
        state: started
      when: "ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'"
